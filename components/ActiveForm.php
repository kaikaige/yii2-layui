<?php
namespace kaikaige\layui\components;

use yii\db\ActiveRecord;
use yii\helpers\ArrayHelper;
use yii\helpers\Html;

class ActiveForm extends \yii\widgets\ActiveForm
{
    public $enableClientValidation = false;

    public $fields = [];

    public $fieldClass = 'kaikaige\layui\components\ActiveField';

    public function init()
    {
        parent::init(); // TODO: Change the autogenerated stub
        $this->options = ArrayHelper::merge([
            'class' => 'layui-form model-form layui-row'
        ], $this->options);

        $this->fieldConfig = ArrayHelper::merge([
            'template' => '<div class="layui-form-item">{label}<div class="layui-input-block">{input}</div></div>',
            'labelOptions' => ['class' => 'layui-form-label'],
            'inputOptions' => ['class'=>'layui-input'],
            'options'=>['tag'=>false]
        ], $this->fieldConfig);
    }

    public function run()
    {
        if (!empty($this->_fields)) {
            throw new InvalidCallException('Each beginField() should have a matching endField() call.');
        }

        $content = ob_get_clean();
        $html = Html::beginForm($this->action, $this->method, $this->options);
        $html .= $content;

        if ($this->enableClientScript) {
            $this->registerClientScript();
        }

        $html .= Html::endForm();
        return $html;
    }

    /**
     * @param \yii\base\Model $model
     * @param string $attribute
     * @param array $options
     * @date 2020/10/14 3:56 下午
     * @author gaokai
     * @return ActiveField
     * @modified_date 2020/10/14 3:56 下午
     * @modified_user gaokai
     */
    public function field($model, $attribute, $options = [])
    {
        $field = parent::field($model, $attribute, $options); // TODO: Change the autogenerated stub
        $this->fields[] = $field;
        return $field;
    }

    public function registerClientScript()
    {
    }

}