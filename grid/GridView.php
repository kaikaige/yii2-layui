<?php
/**
 * Created by PhpStorm.
 * User: gaokai
 * Date: 2019-10-23
 * Time: 14:53
 */

namespace kaikaige\layui\grid;

use yii\base\Widget;
use yii\db\ActiveRecord;
use yii\helpers\ArrayHelper;
use yii\helpers\Html;
use yii\helpers\Json;
use yii\web\View;

class GridView extends Widget
{
    /**
     * @var ActiveRecord
     */
    public $model;

    public $searchForm = '';

    public $formArea = ['80%'];

    /**
     * [
     *  ['attribute'=>'name', 'type'=>'editor']
     *  'laydate.render({
     *      elnm: #Html::getInputId($model, $attribute)
     *  })'
     * ],
     * @var Array
     */
    public $createFormJs = [];

    public $searchFormJs = [];

    public $openJs = '';

    public $columns = [];
    public $url = ['index'];
    public $options = [];

    public $rowButtons = [];
    public $toolbarButtons = [];

    public $layuiModule = ['layer', 'admin', 'form', 'formX', 'table', 'CKEDITOR', 'util', 'laydate', 'upload', 'cascader', 'treetable', 'iconPicker'];

    public $barConfig = [
        'fixed'=>'right',
        'width'=>178,
        'align'=>'center',
    ];

    /**
     * @var string 列编辑编号ID
     */
    public $_barId;

    /**
     * @var string 左上方按钮列ID
     */
    public $_toolBarId;

    public function init()
    {
        parent::init(); // TODO: Change the autogenerated stub
        $this->_barId = $this->getId().'_bar';
        $this->_toolBarId = $this->getId().'_tool_bar';
        $this->barConfig['toolbar'] = '#'.$this->_barId;
        $this->createFormJs = $this->formJs($this->createFormJs);
        $this->searchFormJs = $this->formJs($this->searchFormJs);
    }

    public function run()
    {
        parent::run();
//        $this->renderForm();
        $this->renderView();
        $this->renderTable();
        $this->rowButtons = ArrayHelper::merge($this->defaultBarButtons(), $this->rowButtons);
        $this->toolbarButtons = ArrayHelper::merge($this->defaultToobarButtons(), $this->toolbarButtons);
        $this->renderButton();
        $this->renderJs();
    }

    public function renderView() {

    }

    public function renderTable()
    {
        echo Html::tag('table', '', ['lay-filter'=>$this->id, 'id'=>$this->id]);
    }

    public function renderButton()
    {
        echo Html::beginTag('script', ['type'=>'text/html', 'id'=>$this->_barId]);
        foreach ($this->rowButtons as $event => $button) {
            if (!$button) continue;
            $button['class'] = RowButton::class;
            $button['event'] = $event;
            $obj = \Yii::createObject($button);
            echo $obj->tag();
        }
        echo Html::endTag('script');
        echo Html::beginTag('script', ['type'=>'text/html', 'id'=>$this->_toolBarId]);
        foreach ($this->toolbarButtons as $event => $button) {
            if (!$button) continue;

            $button['class'] = RowButton::class;
            $button['event'] = $event;
            $obj = \Yii::createObject($button);
            echo $obj->tag();
        }
        echo Html::endTag('script');
    }

    public function renderJs() {
        $this->options = ArrayHelper::merge($this->options, [
            'toolbar' => '#'.$this->_toolBarId,
            'elem' => '#'.$this->id,
            'autoSort' => false,
            'url' => \yii\helpers\Url::to($this->url),
            'cols' =>  [$this->genCol()],
        ]);

        $barEvent = "";
        foreach ($this->rowButtons as $event=>$button) {
            if (!isset($button['js'])) continue;
            $barEvent .= "if (obj.event == '".$event."') {".$button['js']."}";
        }
        $barEvent = str_replace("{{createFormJs}}", $this->createFormJs, $barEvent);
        $toolbarEvent = "";
        foreach ($this->toolbarButtons as $event=>$button) {
            if (!isset($button['js'])) continue;
            $toolbarEvent .= "if (obj.event == '".$event."') {".str_replace("{{id}}", $this->getId(), $button['js'])."}\n";
        }
        $toolbarEvent = str_replace("{{createFormJs}}", $this->createFormJs, $toolbarEvent);
        $options = Json::htmlEncode($this->options);
        $js = "
        layui.use(".Json::htmlEncode($this->layuiModule).", function(){
          //第一个实例
          var $ = layui.jquery
          ".$this->defLayuiModule()."
          console.log(iconPicker)
          var tableObj = table.render(".$options.");
          var searchForm = {}
          var loading
          $(document).ajaxStart(function(){
            loading = layer.load(0, {
                shade: false,
                time: 10*1000
            });
          }).ajaxComplete(function() {
            layer.close(loading);
          }).ajaxError(function(event, res) {
            if (res.status == 422) {
                layer.msg(res.responseJSON[0].message, {icon:2})
            } else if (res.status == 400) {
                layer.msg(res.responseJSON.message, {icon:2})
            }
          })
          //编辑单元格
          table.on('edit($this->id)', function(obj) {
            let params = {
                value:obj.value, 
                attribute:obj.field, 
                '".\Yii::$app->request->csrfParam."':'".\Yii::$app->request->getCsrfToken()."'
            } 
            $.post('".\yii\helpers\Url::to(['update-attribute'])."?id='+obj.data.id, params,function(data) {
                layer.msg('修改成功', {icon:1})
            })
          })
          //监听排序
          table.on('sort($this->id)', function(obj) {
            searchForm['sort'] = obj.type != 'desc' ? obj.field : '-'+obj.field
            tableObj.reload({
                where: searchForm
            })
          })
          //监听头部工具
          table.on('tool($this->id)', function(obj) {
            $barEvent
          })
          //监听行内工具
          table.on('toolbar($this->id)', function(obj) {
            $toolbarEvent
          })
        });";
        $this->view->registerJs($js, View::POS_END);
    }

    public function genCol() {
        $data = [];
        foreach ($this->columns as $index => $col) {
            $model = $this->model;
            if (!is_array($col)) { //默认
                $col = ['field'=>$col, 'title'=>$model->getAttributeLabel($col)];
            } elseif (isset($col['field'])) { //单选、复选等
                $col['title'] = $col['title'] ?? $model->getAttributeLabel($col['field']);
            }
            $data[] = $col;
        }
        $data[] = $this->barConfig;
        return $data;
    }

    protected function defaultToobarButtons()
    {
        return [
            'deleteAll' => [
                'title' => '批量删除',
                'options' => [
                    'class' => 'layui-btn layui-btn-sm layui-btn-danger',
                ],
                'js' => '
                    let checkItems = table.checkStatus("{{id}}")
                    let data = arrayMap(checkItems.data)
                    if (data.length == 0) {
                        layer.msg(\'未选中有效行\', {icon:2});
                        return
                    }
                    layer.confirm("确定删除吗", function(index) {
                        $.post("'.\yii\helpers\Url::to(['delete-batch']).'", {data:data}, function() {
                            tableObj.reload()
                        })
                        layer.close(index);
                    })
                    ',
            ],
            'create' => [
                'title' => '<i class="layui-icon layui-icon-add-1"></i>',
                'options' => [
                    'class' => 'layui-btn layui-btn-sm',
                ],
                'js' => '
                $.get("'.\yii\helpers\Url::to(['create']).'", function(data) {
                    var index = layer.open({
                      type: 1,
                      title: "添加",
                      area: '.Json::htmlEncode($this->formArea).',
                      content: data,
                      maxmin: true,
                      success:function() {
                        '.$this->createFormJs.'
                        openLoad();
                        form.render();
                        form.on("submit('.$this->model->formName().'Submit)", function(data) {
                            $.post("'.\yii\helpers\Url::to(['create']).'", data.field, function(obj) {
                                layer.close(index)
                                layer.msg("添加成功", {icon:1})
                                tableObj.reload()
                            })
                            return false
                        })
                      },
                    })
                }); 
                ',
            ],
            'search' => [
                'title' => '<i class="layui-icon layui-icon-search"></i>',
                'options' => [
                    'class' => 'layui-btn layui-btn-sm',
                ],
                'js' => '
                    var index = layer.open({
                      type: 1,
                      title: "搜索",
                      area: [\'50%\'],
                      content: '.$this->searchForm.',
                      maxmin: true,
                      success:function() {
                            '.$this->openJs.'
                            openLoad(),
                            form.render()
                            form.val("'.$this->model->formName().'Form", searchForm)
                            form.on("submit('.$this->model->formName().'Submit)", function(data) {
                            searchForm = form.val("'.$this->model->formName().'Form")
                            tableObj.reload({
                                page: {
                                    curr: 1 //重新从第 1 页开始
                                },
                                where: searchForm
                            })
                            layer.close(index)
                            return false;
                        })
                      },
                    })
                ',
            ],
            'refresh' => [
                'title' => '<i class="layui-icon layui-icon-refresh"></i>',
                'options' => [
                    'class' => 'layui-btn layui-btn-sm',
                ],
                'js' => 'tableObj.reload()',
            ],
        ];
    }

    public function defaultBarButtons()
    {
        return [
            'detail' => [
                'title' => '查看',
                'options' => [
                    'class' => 'layui-btn layui-btn-primary layui-btn-xs',
                ],
                'js' => '
                $.get("'.\yii\helpers\Url::to(['view']).'?id="+obj.data.id, function(data) {
                    var index = layer.open({
                      type: 1,
                      title: "添加",
                      area: setpage(),
                      content: data,
                    })
                })  
                ',
            ],
            'edit' => [
                'title' => '编辑',
                'options' => [
                    'class' => 'layui-btn layui-btn-xs',
                ],
                'js' => '
                $.get("'.\yii\helpers\Url::to(['update']).'?id="+obj.data.id, function(data) {
                    var index = layer.open({
                      type: 1,
                      title: "编辑",
                      area: '.Json::htmlEncode($this->formArea).',
                      content: data,
                      maxmin: true,
                      success:function() {
                        '.$this->createFormJs.'
                        openLoad(),
                        form.render()
                        form.on("submit('.$this->model->formName().'Submit)", function(data) {
                            $.post("'.\yii\helpers\Url::to(['update']).'?id="+obj.data.id, data.field, function(obj) {
                                layer.close(index)
                                tableObj.reload()
                            })
                            return false
                        })
                      },
                    })
                })
                ',
            ],
            'delete' => [
                'title' => '删除',
                'options' => [
                    'class' => 'layui-btn layui-btn-danger layui-btn-xs',
                ],
                'js' => 'layer.confirm(\'真的删除行么\', function(index){
                $.get("'.\yii\helpers\Url::to(['delete']).'?id="+obj.data.id, function() {
                    obj.del();
                    layer.close(index);
                })                
            });',
            ],
        ];
    }

    public function formJs($arr) {
        $js = '';
        foreach ($arr as $field) {
            if (!is_array($field)) {
                $js .= $field;
            } else {
                $type = $field['type'];
                $id = Html::getInputId($this->model, $field['attribute']);

                if ($type == 'editor') {
                    $js .= "
                        CKEDITOR.replace('$id');
                        dosamigos.ckEditorWidget.registerOnChangeHandler('$id');
                    ";
                } elseif ($type == 'date') {
                    $js .= "
                        laydate.render({
                            elem:'#$id'
                        });
                    ";
                }
            }
        }
        return $js;
    }

    public function defLayuiModule() {
        $js = "";
        foreach ($this->layuiModule as $module) {
            $js .= "var $module = layui.$module\n";
        }
        return $js;
    }
}